// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartHome.Infrastructure.DbContexts.Implementations;

namespace SmartHome.Infrastructure.Migrations
{
    [DbContext(typeof(SmartHomeDbContext))]
    [Migration("20200526172051_groups")]
    partial class groups
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartHome.Core.Models.Device", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AccessToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPv4Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MacAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("SmartHome.Core.Models.DeviceGroup", b =>
                {
                    b.Property<Guid>("DeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DeviceId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("DeviceGroup");
                });

            modelBuilder.Entity("SmartHome.Core.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c5e30a1f-6435-485a-8082-49733f464a9d"),
                            Name = "SunriseTask"
                        },
                        new
                        {
                            Id = new Guid("bf3d1da4-7f56-4630-ad42-5dd8142e3a7f"),
                            Name = "SunsetTask"
                        });
                });

            modelBuilder.Entity("SmartHome.Core.Models.RelayButton", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PinNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RelayButtons");
                });

            modelBuilder.Entity("SmartHome.Core.Models.Shutter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CloseButtonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DeviceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OpenButtonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TimeToOpen")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CloseButtonId");

                    b.HasIndex("DeviceId");

                    b.HasIndex("OpenButtonId");

                    b.ToTable("Shutters");
                });

            modelBuilder.Entity("SmartHome.Core.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SmartHome.Core.Models.DeviceGroup", b =>
                {
                    b.HasOne("SmartHome.Core.Models.Device", "Device")
                        .WithMany("DeviceGroups")
                        .HasForeignKey("DeviceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartHome.Core.Models.Group", "Group")
                        .WithMany("DeviceGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartHome.Core.Models.Shutter", b =>
                {
                    b.HasOne("SmartHome.Core.Models.RelayButton", "CloseButton")
                        .WithMany()
                        .HasForeignKey("CloseButtonId");

                    b.HasOne("SmartHome.Core.Models.Device", "Device")
                        .WithMany()
                        .HasForeignKey("DeviceId");

                    b.HasOne("SmartHome.Core.Models.RelayButton", "OpenButton")
                        .WithMany()
                        .HasForeignKey("OpenButtonId");
                });
#pragma warning restore 612, 618
        }
    }
}
